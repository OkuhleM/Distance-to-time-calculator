{"ast":null,"code":"var _jsxFileName = \"/home/tcg-pc1/workspace/Distance-to-time-calculator/my-app/src/Components/DistanceToTime.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class DistanceToTime extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getTimeRemaining = distance => {\n      var giveDistance = new Date(distance);\n      const today = new Date();\n      var destination = giveDistance.getTime() - today.getTime();\n      var days = Math.floor(distance / (1000 * 60 * 60 * 24));\n      var hours = Math.floor(distance % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));\n      var minutes = Math.floor(distance % (1000 * 60 * 60) / (1000 * 60));\n      var seconds = Math.floor(distance % (1000 * 60) / 1000);\n      alert(destination);\n      var days = 0;\n      var hours = 0;\n      var minutes = 0;\n      var seconds = 0;\n      return {\n        'days': days,\n        'hours': hours,\n        'minutes': minutes,\n        'seconds': seconds\n      };\n    };\n\n    this.componentWillMount = () => {\n      this.setState = {\n        timeRemaining: this.getTimeRemaining()\n      };\n    };\n\n    this.componentDidMount = () => {\n      this.distance = this.props.distanceFormState.startTime.toString();\n    };\n\n    this.state = {\n      timeRemaining: {}\n    };\n    this.getTimeRemaining = this.getTimeRemaining.bind(this);\n  }\n\n  render() {\n    const data = this.state.timeRemaining;\n    console.log(\"Hello World\");\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Days\", days]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"hours\", data.state.hours]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"minutes\", data.minutes]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"seconds\", data.seconds]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/tcg-pc1/workspace/Distance-to-time-calculator/my-app/src/Components/DistanceToTime.js"],"names":["React","Component","DistanceToTime","constructor","props","getTimeRemaining","distance","giveDistance","Date","today","destination","getTime","days","Math","floor","hours","minutes","seconds","alert","componentWillMount","setState","timeRemaining","componentDidMount","distanceFormState","startTime","toString","state","bind","render","data","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,eAAe,MAAMC,cAAN,SAA6BD,SAA7B,CAAuC;AAClDE,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAQtBC,gBARsB,GAQFC,QAAD,IAAc;AAE7B,UAAIC,YAAY,GAAG,IAAIC,IAAJ,CAASF,QAAT,CAAnB;AACA,YAAMG,KAAK,GAAG,IAAID,IAAJ,EAAd;AACA,UAAIE,WAAW,GAAGH,YAAY,CAACI,OAAb,KAAyBF,KAAK,CAACE,OAAN,EAA3C;AAEA,UAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWR,QAAQ,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAArB,CAAnB,CAAX;AACA,UAAIS,KAAK,GAAGF,IAAI,CAACC,KAAL,CAAYR,QAAQ,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAArB,CAAT,IAAsC,OAAO,EAAP,GAAY,EAAlD,CAAX,CAAZ;AACA,UAAIU,OAAO,GAAGH,IAAI,CAACC,KAAL,CAAYR,QAAQ,IAAI,OAAO,EAAP,GAAY,EAAhB,CAAT,IAAiC,OAAO,EAAxC,CAAX,CAAd;AACA,UAAIW,OAAO,GAAGJ,IAAI,CAACC,KAAL,CAAYR,QAAQ,IAAI,OAAO,EAAX,CAAT,GAA2B,IAAtC,CAAd;AAEAY,MAAAA,KAAK,CAACR,WAAD,CAAL;AACA,UAAIE,IAAI,GAAG,CAAX;AACA,UAAIG,KAAK,GAAG,CAAZ;AACA,UAAIC,OAAO,GAAG,CAAd;AACA,UAAIC,OAAO,GAAG,CAAd;AAGA,aAAM;AACF,gBAAQL,IADN;AAEF,iBAASG,KAFP;AAGF,mBAAWC,OAHT;AAIF,mBAAWC;AAJT,OAAN;AAQH,KAlCqB;;AAAA,SAsCtBE,kBAtCsB,GAsCD,MAAM;AACvB,WAAKC,QAAL,GAAgB;AACZC,QAAAA,aAAa,EAAE,KAAKhB,gBAAL;AADH,OAAhB;AAGH,KA1CqB;;AAAA,SAyDlBiB,iBAzDkB,GAyDE,MAAM;AACtB,WAAKhB,QAAL,GAAgB,KAAKF,KAAL,CAAWmB,iBAAX,CAA6BC,SAA7B,CAAuCC,QAAvC,EAAhB;AACH,KA3DiB;;AAEd,SAAKC,KAAL,GAAa;AACTL,MAAAA,aAAa,EAAE;AADN,KAAb;AAGA,SAAKhB,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBsB,IAAtB,CAA2B,IAA3B,CAAxB;AACH;;AAsCDC,EAAAA,MAAM,GAAG;AACL,UAAMC,IAAI,GAAG,KAAKH,KAAL,CAAWL,aAAxB;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,wBACI;AAAA,8BACI;AAAA,2BAAUnB,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,4BAAWiB,IAAI,CAACH,KAAL,CAAWX,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,8BAAac,IAAI,CAACb,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA,8BAAaa,IAAI,CAACZ,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AASH;;AAzDiD","sourcesContent":["import React, { Component } from 'react'\n\nexport default class DistanceToTime extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            timeRemaining: {}\n        }\n        this.getTimeRemaining = this.getTimeRemaining.bind(this);\n    }\n\ngetTimeRemaining = (distance) => {\n\n    var giveDistance = new Date(distance);\n    const today = new Date();\n    var destination = giveDistance.getTime() - today.getTime();\n\n    var days = Math.floor(distance / (1000 * 60 * 60 * 24));\n    var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n    var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n    var seconds = Math.floor((distance % (1000 * 60)) / 1000);\n\n    alert(destination);\n    var days = 0;\n    var hours = 0;\n    var minutes = 0;\n    var seconds = 0;\n    \n\n    return{\n        'days': days,\n        'hours': hours,\n        'minutes': minutes,\n        'seconds': seconds,\n    }\n\n\n}\n\n\n\ncomponentWillMount = () => {\n    this.setState = {\n        timeRemaining: this.getTimeRemaining()\n    }\n}\n\n    render() {\n        const data = this.state.timeRemaining\n        console.log(\"Hello World\")\n        return (\n            <div>\n                <div>Days{days}</div>\n                <div>hours{data.state.hours}</div>\n                <div>minutes{data.minutes}</div>\n                <div>seconds{data.seconds}</div>\n                \n            </div>\n        )\n    }\n    componentDidMount = () => {\n        this.distance = this.props.distanceFormState.startTime.toString();\n    }\n}\n"]},"metadata":{},"sourceType":"module"}