{"ast":null,"code":"var _jsxFileName = \"/home/tcg-pc1/workspace/Distance-to-time-calculator/my-app/src/Components/DistanceToTime.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DistanceToTime() {\n  _s();\n\n  const [distance, setDistance] = React.useState({\n    walking: 0,\n    driving: 0,\n    flying: 0\n  });\n\n  const updateWalking = e => setDistance({\n    flying: e.target.value,\n    walking: (+e.target.value * 60).toFixed(3),\n    driving: (+e.target.value * 60).toFixed(3)\n  });\n\n  const updateDriving = e => setDistance({\n    walking: (+e.target.value * 60).toFixed(3),\n    flying: e.target.value,\n    driving: e.target.value\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"time\",\n      children: [\"Enter your Distance:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 41\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: distance.f,\n        onChange: updateF\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 42\n      }, this), \"Distance when Walking\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 42\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: temp.f,\n        onChange: updateF\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 50\n      }, this), \"Distance When Driving\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 42\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 51\n      }, this), \"Distance when flying\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 41\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 51\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 16\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DistanceToTime, \"SHsWFPyosmDh2rrFtP+4r846T1c=\");\n\n_c = DistanceToTime;\n\nvar _c;\n\n$RefreshReg$(_c, \"DistanceToTime\");","map":{"version":3,"sources":["/home/tcg-pc1/workspace/Distance-to-time-calculator/my-app/src/Components/DistanceToTime.js"],"names":["React","useState","DistanceToTime","distance","setDistance","walking","driving","flying","updateWalking","e","target","value","toFixed","updateDriving","f","updateF","temp"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,eAAe,SAASC,cAAT,GAA0B;AAAA;;AACrC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,KAAK,CAACC,QAAN,CAAe;AAAEI,IAAAA,OAAO,EAAE,CAAX;AAAcC,IAAAA,OAAO,EAAE,CAAvB;AAA0BC,IAAAA,MAAM,EAAE;AAAlC,GAAf,CAAhC;;AAEA,QAAMC,aAAa,GAAGC,CAAC,IAAIL,WAAW,CAAE;AACpCG,IAAAA,MAAM,EAAEE,CAAC,CAACC,MAAF,CAASC,KADmB;AAEpCN,IAAAA,OAAO,EAAE,CAAC,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,GAAiB,EAAlB,EAAsBC,OAAtB,CAA8B,CAA9B,CAF2B;AAGpCN,IAAAA,OAAO,EAAE,CAAC,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,GAAiB,EAAlB,EAAsBC,OAAtB,CAA8B,CAA9B;AAH2B,GAAF,CAAtC;;AAMA,QAAMC,aAAa,GAAGJ,CAAC,IAAIL,WAAW,CAAC;AACnCC,IAAAA,OAAO,EAAE,CAAC,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,GAAiB,EAAlB,EAAsBC,OAAtB,CAA8B,CAA9B,CAD0B;AAEnCL,IAAAA,MAAM,EAAEE,CAAC,CAACC,MAAF,CAASC,KAFkB;AAGnCL,IAAAA,OAAO,EAAEG,CAAC,CAACC,MAAF,CAASC;AAHiB,GAAD,CAAtC;;AAKA,sBACI;AAAA,2BACO;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA,sDACyB;AAAA;AAAA;AAAA;AAAA,cADzB,eAEK;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAIR,QAAQ,CAACW,CAAvC;AACR,QAAA,QAAQ,EAAIC;AADJ;AAAA;AAAA;AAAA;AAAA,cAFL,eAG0B;AAAA;AAAA;AAAA;AAAA,cAH1B,wCAI0B;AAAA;AAAA;AAAA;AAAA,cAJ1B,eAKK;AAAO,QAAA,IAAI,EAAC,QAAZ;AACA,QAAA,KAAK,EAAIC,IAAI,CAACF,CADd;AAEA,QAAA,QAAQ,EAAIC;AAFZ;AAAA;AAAA;AAAA;AAAA,cALL,eAOkC;AAAA;AAAA;AAAA;AAAA,cAPlC,wCAQ0B;AAAA;AAAA;AAAA;AAAA,cAR1B,eASK;AAAO,QAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,cATL,eASmC;AAAA;AAAA;AAAA;AAAA,cATnC,uCAUyB;AAAA;AAAA;AAAA;AAAA,cAVzB,eAWK;AAAO,QAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,cAXL,eAWmC;AAAA;AAAA;AAAA;AAAA,cAXnC;AAAA;AAAA;AAAA;AAAA;AAAA;AADP;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH;;GA/BuBb,c;;KAAAA,c","sourcesContent":["import React from 'react';\nimport { useState } from 'react'\n\nexport default function DistanceToTime() {\n    const [distance, setDistance] = React.useState({ walking: 0, driving: 0, flying: 0});\n    \n    const updateWalking = e => setDistance ({\n        flying: e.target.value,\n        walking: (+e.target.value *60).toFixed(3),\n        driving: (+e.target.value *60).toFixed(3)\n    })\n\n    const updateDriving = e => setDistance({\n        walking: (+e.target.value *60).toFixed(3),\n        flying: e.target.value,\n        driving: e.target.value\n    })\n    return (\n        <div>\n               <form className=\"time\">\n                    Enter your Distance:<br/>\n                    <input type=\"number\" value = {distance.f} \n            onChange = {updateF}></input><br/>\n                    Distance when Walking<br/>\n                    <input type=\"number\" \n                    value = {temp.f} \n                    onChange = {updateF}></input><br/>\n                    Distance When Driving<br/>\n                    <input type=\"number\" ></input><br/>\n                    Distance when flying<br />\n                    <input type=\"number\" ></input><br/>\n                </form>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}