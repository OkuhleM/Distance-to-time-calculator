{"ast":null,"code":"var _jsxFileName = \"/home/tcg-pc1/workspace/Distance-to-time-calculator/src/Components/DistanceToTime.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DistanceToTime() {\n  _s();\n\n  const [distance, setDistance] = React.useState({\n    walking: 0,\n    driving: 0,\n    flying: 0\n  });\n  var averageSpeedWhenWalking = 3.6;\n  var averageSpeedWhenDriving = 50;\n  var averageSpeedWhenFlying = 800;\n\n  const updateWalkingValue = e => setDistance({\n    value: e.target.value,\n    walking: (+e.target.value * 60 / averageSpeedWhenWalking).toFixed(1),\n    driving: (+e.target.value * 60 / averageSpeedWhenDriving).toFixed(0),\n    flying: (+e.target.value * 60 / averageSpeedWhenFlying).toFixed(1)\n  });\n\n  const updateDrivingValue = e => setDistance({\n    value: e.target.value,\n    driving: (+e.target.value * 60 / averageSpeedWhenDriving).toFixed(2)\n  });\n\n  const updateFlyingValue = e => setDistance({\n    value: e.target.value,\n    flying: (+e.target.value * 60 / averageSpeedWhenFlying).toFixed(1)\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Enter The Distance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 36\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: distance.value,\n          onChange: updateWalkingValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: updateDrivingValue.driving\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DistanceToTime, \"SHsWFPyosmDh2rrFtP+4r846T1c=\");\n\n_c = DistanceToTime;\n\nvar _c;\n\n$RefreshReg$(_c, \"DistanceToTime\");","map":{"version":3,"sources":["/home/tcg-pc1/workspace/Distance-to-time-calculator/src/Components/DistanceToTime.js"],"names":["React","useState","DistanceToTime","distance","setDistance","walking","driving","flying","averageSpeedWhenWalking","averageSpeedWhenDriving","averageSpeedWhenFlying","updateWalkingValue","e","value","target","toFixed","updateDrivingValue","updateFlyingValue"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,eAAe,SAASC,cAAT,GAA0B;AAAA;;AACrC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,KAAK,CAACC,QAAN,CAAe;AAAEI,IAAAA,OAAO,EAAE,CAAX;AAAcC,IAAAA,OAAO,EAAE,CAAvB;AAA0BC,IAAAA,MAAM,EAAE;AAAlC,GAAf,CAAhC;AAEA,MAAIC,uBAAuB,GAAG,GAA9B;AACA,MAAIC,uBAAuB,GAAG,EAA9B;AACA,MAAIC,sBAAsB,GAAG,GAA7B;;AAEA,QAAMC,kBAAkB,GAAGC,CAAC,IAAIR,WAAW,CAAE;AACzCS,IAAAA,KAAK,EAAED,CAAC,CAACE,MAAF,CAASD,KADyB;AAEzCR,IAAAA,OAAO,EAAE,CAAE,CAACO,CAAC,CAACE,MAAF,CAASD,KAAV,GAAiB,EAAlB,GAAsBL,uBAAvB,EAAgDO,OAAhD,CAAwD,CAAxD,CAFgC;AAGzCT,IAAAA,OAAO,EAAE,CAAE,CAACM,CAAC,CAACE,MAAF,CAASD,KAAV,GAAiB,EAAlB,GAAsBJ,uBAAvB,EAAgDM,OAAhD,CAAwD,CAAxD,CAHgC;AAIzCR,IAAAA,MAAM,EAAE,CAAE,CAACK,CAAC,CAACE,MAAF,CAASD,KAAV,GAAiB,EAAlB,GAAsBH,sBAAvB,EAAgDK,OAAhD,CAAwD,CAAxD;AAJiC,GAAF,CAA3C;;AAMA,QAAMC,kBAAkB,GAAGJ,CAAC,IAAIR,WAAW,CAAE;AACzCS,IAAAA,KAAK,EAAED,CAAC,CAACE,MAAF,CAASD,KADyB;AAEzCP,IAAAA,OAAO,EAAE,CAAE,CAACM,CAAC,CAACE,MAAF,CAASD,KAAV,GAAiB,EAAlB,GAAsBJ,uBAAvB,EAAgDM,OAAhD,CAAwD,CAAxD;AAFgC,GAAF,CAA3C;;AAMA,QAAME,iBAAiB,GAAGL,CAAC,IAAIR,WAAW,CAAE;AACxCS,IAAAA,KAAK,EAAED,CAAC,CAACE,MAAF,CAASD,KADwB;AAExCN,IAAAA,MAAM,EAAE,CAAE,CAACK,CAAC,CAACE,MAAF,CAASD,KAAV,GAAiB,EAAlB,GAAsBH,sBAAvB,EAAgDK,OAAhD,CAAwD,CAAxD;AAFgC,GAAF,CAA1C;;AASA,sBACI;AAAA,4BACO;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA,6BACA;AAAA,gCACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADO,eACoB;AAAA;AAAA;AAAA;AAAA,gBADpB,eAEP;AACI,UAAA,IAAI,EAAG,QADX;AAEI,UAAA,KAAK,EAAIZ,QAAQ,CAACU,KAFtB;AAGI,UAAA,QAAQ,EAAIF;AAHhB;AAAA;AAAA;AAAA;AAAA,gBAFO;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADP,eA2BR;AAAA,gBAAIK,kBAAkB,CAACV;AAAvB;AAAA;AAAA;AAAA;AAAA,YA3BQ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgCH;;GA5DuBJ,c;;KAAAA,c","sourcesContent":["import React from 'react';\nimport { useState } from 'react'\n\nexport default function DistanceToTime() {\n    const [distance, setDistance] = React.useState({ walking: 0, driving: 0, flying: 0});\n   \n    var averageSpeedWhenWalking = 3.6;\n    var averageSpeedWhenDriving = 50;\n    var averageSpeedWhenFlying = 800;\n\n    const updateWalkingValue = e => setDistance ({\n        value: e.target.value,\n        walking: ((+e.target.value *60)/averageSpeedWhenWalking).toFixed(1),\n        driving: ((+e.target.value *60)/averageSpeedWhenDriving).toFixed(0),\n        flying: ((+e.target.value *60)/averageSpeedWhenFlying ).toFixed(1)\n    })\n    const updateDrivingValue = e => setDistance ({\n        value: e.target.value,\n        driving: ((+e.target.value *60)/averageSpeedWhenDriving).toFixed(2),\n        \n    })\n\n    const updateFlyingValue = e => setDistance ({\n        value: e.target.value,\n        flying: ((+e.target.value *60)/averageSpeedWhenFlying ).toFixed(1)\n\n        \n    })\n\n   \n\n    return (\n        <div>\n               <form className=\"container\">\n               <div>\n        <h1>Enter The Distance</h1><br/>\n        <input\n            type = \"number\"\n            value = {distance.value}\n            onChange = {updateWalkingValue} >\n          </input>\n          </div>\n                    </form>\n      \n                    {/* Time When Walking:<br/>\n                    <input type=\"number\" \n                    value = {distance.walking} \n                    onChange = {updateWalkingValue}></input><br/>\n                    Time when Driving<br/>\n                    <input type=\"number\" \n                    value = {distance.driving} \n                    onChange = {updateDrivingValue}></input><br/>\n                    Time When Flying<br/>\n                    <input type=\"number\" \n                    value = {distance.flying} \n                    onChange = {updateFlyingValue}></input><br/>\n\n                    <p>{updateDrivingValue.driving}</p> */}\n\n<p>{updateDrivingValue.driving}</p>\n                \n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}