{"ast":null,"code":"var _jsxFileName = \"/home/tcg-pc1/workspace/Distance-to-time-calculator/my-app/src/Components/DistanceToTime.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DistanceToTime() {\n  _s();\n\n  const [distance, setDistance] = React.useState({\n    walking: 0,\n    driving: 0,\n    flying: 0\n  });\n  var averageSpeedWhenWalking = 3.6;\n  var averageSpeedWhenDriving = 50;\n  var averageSpeedWhenFlying = 800;\n\n  const updateValue = e => setDistance({\n    value: e.target.value,\n    walking: (+e.target.value * 60 / averageSpeedWhenWalking).toFixed(0),\n    driving: (+e.target.value * 60 / averageSpeedWhenDriving).toFixed(0),\n    flying: (+e.target.value * 60 / averageSpeedWhenFlying).toFixed(1)\n  });\n\n  const updateDrivingValue = e => setDistance({\n    value: e.target.value\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"box1\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Add Distance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: distance.value,\n          onChange: updateValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 16\n      }, this), \"Distance When Walking:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 43\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: distance.walking,\n        onChange: updateValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 54\n      }, this), \"Distance when Driving\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 42\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: distance.driving,\n        onChange: updateValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 54\n      }, this), \"Distance When Flight\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 41\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: distance.flying,\n        onChange: updateValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 54\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 16\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DistanceToTime, \"SHsWFPyosmDh2rrFtP+4r846T1c=\");\n\n_c = DistanceToTime;\n\nvar _c;\n\n$RefreshReg$(_c, \"DistanceToTime\");","map":{"version":3,"sources":["/home/tcg-pc1/workspace/Distance-to-time-calculator/my-app/src/Components/DistanceToTime.js"],"names":["React","useState","DistanceToTime","distance","setDistance","walking","driving","flying","averageSpeedWhenWalking","averageSpeedWhenDriving","averageSpeedWhenFlying","updateValue","e","value","target","toFixed","updateDrivingValue"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,eAAe,SAASC,cAAT,GAA0B;AAAA;;AACrC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,KAAK,CAACC,QAAN,CAAe;AAAEI,IAAAA,OAAO,EAAE,CAAX;AAAcC,IAAAA,OAAO,EAAE,CAAvB;AAA0BC,IAAAA,MAAM,EAAE;AAAlC,GAAf,CAAhC;AAEA,MAAIC,uBAAuB,GAAG,GAA9B;AACA,MAAIC,uBAAuB,GAAG,EAA9B;AACA,MAAIC,sBAAsB,GAAG,GAA7B;;AAEA,QAAMC,WAAW,GAAGC,CAAC,IAAIR,WAAW,CAAE;AAClCS,IAAAA,KAAK,EAAED,CAAC,CAACE,MAAF,CAASD,KADkB;AAElCR,IAAAA,OAAO,EAAE,CAAC,CAACO,CAAC,CAACE,MAAF,CAASD,KAAV,GAAiB,EAAjB,GAAoBL,uBAArB,EAA8CO,OAA9C,CAAsD,CAAtD,CAFyB;AAGlCT,IAAAA,OAAO,EAAE,CAAC,CAACM,CAAC,CAACE,MAAF,CAASD,KAAV,GAAiB,EAAjB,GAAoBJ,uBAArB,EAA8CM,OAA9C,CAAsD,CAAtD,CAHyB;AAIlCR,IAAAA,MAAM,EAAE,CAAC,CAACK,CAAC,CAACE,MAAF,CAASD,KAAV,GAAiB,EAAjB,GAAoBH,sBAArB,EAA8CK,OAA9C,CAAsD,CAAtD;AAJ0B,GAAF,CAApC;;AAMA,QAAMC,kBAAkB,GAAGJ,CAAC,IAAIR,WAAW,CAAE;AACzCS,IAAAA,KAAK,EAAED,CAAC,CAACE,MAAF,CAASD;AADyB,GAAF,CAA3C;;AAKA,sBACI;AAAA,2BACO;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA,8BACA;AAAK,QAAA,EAAE,EAAC,MAAR;AAAA,gCACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADO,eAEP;AACI,UAAA,IAAI,EAAG,QADX;AAEI,UAAA,KAAK,EAAIV,QAAQ,CAACU,KAFtB;AAGI,UAAA,QAAQ,EAAIF;AAHhB;AAAA;AAAA;AAAA;AAAA,gBAFO;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,yCAS2B;AAAA;AAAA;AAAA;AAAA,cAT3B,eAUK;AAAO,QAAA,IAAI,EAAC,QAAZ;AACA,QAAA,KAAK,EAAIR,QAAQ,CAACE,OADlB;AAEA,QAAA,QAAQ,EAAIM;AAFZ;AAAA;AAAA;AAAA;AAAA,cAVL,eAYsC;AAAA;AAAA;AAAA;AAAA,cAZtC,wCAa0B;AAAA;AAAA;AAAA;AAAA,cAb1B,eAcK;AAAO,QAAA,IAAI,EAAC,QAAZ;AACA,QAAA,KAAK,EAAIR,QAAQ,CAACG,OADlB;AAEA,QAAA,QAAQ,EAAIK;AAFZ;AAAA;AAAA;AAAA;AAAA,cAdL,eAgBsC;AAAA;AAAA;AAAA;AAAA,cAhBtC,uCAiByB;AAAA;AAAA;AAAA;AAAA,cAjBzB,eAkBK;AAAO,QAAA,IAAI,EAAC,QAAZ;AACA,QAAA,KAAK,EAAIR,QAAQ,CAACI,MADlB;AAEA,QAAA,QAAQ,EAAII;AAFZ;AAAA;AAAA;AAAA;AAAA,cAlBL,eAoBsC;AAAA;AAAA;AAAA;AAAA,cApBtC;AAAA;AAAA;AAAA;AAAA;AAAA;AADP;AAAA;AAAA;AAAA;AAAA,UADJ;AA2BH;;GA7CuBT,c;;KAAAA,c","sourcesContent":["import React from 'react';\nimport { useState } from 'react'\n\nexport default function DistanceToTime() {\n    const [distance, setDistance] = React.useState({ walking: 0, driving: 0, flying: 0});\n   \n    var averageSpeedWhenWalking = 3.6;\n    var averageSpeedWhenDriving = 50;\n    var averageSpeedWhenFlying = 800;\n\n    const updateValue = e => setDistance ({\n        value: e.target.value,\n        walking: (+e.target.value *60/averageSpeedWhenWalking).toFixed(0),\n        driving: (+e.target.value *60/averageSpeedWhenDriving).toFixed(0),\n        flying: (+e.target.value *60/averageSpeedWhenFlying ).toFixed(1)\n    })\n    const updateDrivingValue = e => setDistance ({\n        value: e.target.value,\n\n    })\n\n    return (\n        <div>\n               <form className=\"container\">\n               <div id=\"box1\">\n        <h1>Add Distance</h1>\n        <input\n            type = \"number\"\n            value = {distance.value}\n            onChange = {updateValue} >\n          </input>\n      </div>\n                    Distance When Walking:<br/>\n                    <input type=\"number\" \n                    value = {distance.walking} \n                    onChange = {updateValue}></input><br/>\n                    Distance when Driving<br/>\n                    <input type=\"number\" \n                    value = {distance.driving} \n                    onChange = {updateValue}></input><br/>\n                    Distance When Flight<br/>\n                    <input type=\"number\" \n                    value = {distance.flying} \n                    onChange = {updateValue}></input><br/>\n                \n                </form>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}