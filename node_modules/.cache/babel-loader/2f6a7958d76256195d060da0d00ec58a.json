{"ast":null,"code":"var _jsxFileName = \"/home/tcg-pc1/workspace/Distance-to-time-calculator/my-app/src/Components/DistanceToTime.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class DistanceToTime extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getTimeRemaining = () => {\n      var days = 0;\n      var hours = 0;\n      var minutes = 0;\n      var seconds = 0;\n      return {\n        'days': days,\n        'hours': hours,\n        'minutes': minutes,\n        'seconds': seconds\n      };\n    };\n\n    this.componentWillUnmount = () => {\n      this.setState = {\n        timeRemaining: this.getTimeRemaining()\n      };\n    };\n\n    this.componentDidMount = () => {\n      this.distance = this.props.distanceFormState.startTime.toString();\n    };\n\n    this.state = {\n      timeRemaining: {}\n    };\n    this.getTimeRemaining = this.getTimeRemaining.bind(this);\n  }\n\n  render() {\n    const data = this.state.timeRemaining;\n    console.log(\"Hello World\");\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Days\", data.days]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"hours\", data.hours]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"minutes\", data.minutes]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"seconds\", data.seconds]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/tcg-pc1/workspace/Distance-to-time-calculator/my-app/src/Components/DistanceToTime.js"],"names":["React","Component","DistanceToTime","constructor","props","getTimeRemaining","days","hours","minutes","seconds","componentWillUnmount","setState","timeRemaining","componentDidMount","distance","distanceFormState","startTime","toString","state","bind","render","data","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,eAAe,MAAMC,cAAN,SAA6BD,SAA7B,CAAuC;AAClDE,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAQtBC,gBARsB,GAQH,MAAM;AAErB,UAAIC,IAAI,GAAG,CAAX;AACA,UAAIC,KAAK,GAAG,CAAZ;AACA,UAAIC,OAAO,GAAG,CAAd;AACA,UAAIC,OAAO,GAAG,CAAd;AACA,aAAM;AACF,gBAAQH,IADN;AAEF,iBAASC,KAFP;AAGF,mBAAWC,OAHT;AAIF,mBAAWC;AAJT,OAAN;AAQH,KAtBqB;;AAAA,SAwBtBC,oBAxBsB,GAwBC,MAAM;AACzB,WAAKC,QAAL,GAAgB;AACZC,QAAAA,aAAa,EAAE,KAAKP,gBAAL;AADH,OAAhB;AAGH,KA5BqB;;AAAA,SA2ClBQ,iBA3CkB,GA2CE,MAAM;AACtB,WAAKC,QAAL,GAAgB,KAAKV,KAAL,CAAWW,iBAAX,CAA6BC,SAA7B,CAAuCC,QAAvC,EAAhB;AACH,KA7CiB;;AAEd,SAAKC,KAAL,GAAa;AACTN,MAAAA,aAAa,EAAE;AADN,KAAb;AAGA,SAAKP,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBc,IAAtB,CAA2B,IAA3B,CAAxB;AACH;;AAwBDC,EAAAA,MAAM,GAAG;AACL,UAAMC,IAAI,GAAG,KAAKH,KAAL,CAAWN,aAAxB;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,wBACI;AAAA,8BACI;AAAA,2BAAUF,IAAI,CAACf,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,4BAAWe,IAAI,CAACd,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,8BAAac,IAAI,CAACb,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA,8BAAaa,IAAI,CAACZ,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AASH;;AA3CiD","sourcesContent":["import React, { Component } from 'react'\n\nexport default class DistanceToTime extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            timeRemaining: {}\n        }\n        this.getTimeRemaining = this.getTimeRemaining.bind(this);\n    }\n\ngetTimeRemaining = () => {\n\n    var days = 0;\n    var hours = 0;\n    var minutes = 0;\n    var seconds = 0;\n    return{\n        'days': days,\n        'hours': hours,\n        'minutes': minutes,\n        'seconds': seconds,\n    }\n\n\n}\n\ncomponentWillUnmount = () => {\n    this.setState = {\n        timeRemaining: this.getTimeRemaining()\n    }\n}\n\n    render() {\n        const data = this.state.timeRemaining\n        console.log(\"Hello World\")\n        return (\n            <div>\n                <div>Days{data.days}</div>\n                <div>hours{data.hours}</div>\n                <div>minutes{data.minutes}</div>\n                <div>seconds{data.seconds}</div>\n                \n            </div>\n        )\n    }\n    componentDidMount = () => {\n        this.distance = this.props.distanceFormState.startTime.toString();\n    }\n}\n"]},"metadata":{},"sourceType":"module"}