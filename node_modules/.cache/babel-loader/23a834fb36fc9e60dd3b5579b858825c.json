{"ast":null,"code":"var _jsxFileName = \"/home/tcg-pc1/workspace/Distance-to-time-calculator/my-app/src/Components/DistanceToTime.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DistanceToTime() {\n  _s();\n\n  const [distance, setDistance] = React.useState({\n    walking: 0,\n    driving: 0,\n    flying: 0\n  });\n\n  const updateValue = e => setDistance({\n    value: e.target.value,\n    walking: (+e.target.value * 60).toFixed(3),\n    driving: (+e.target.value * 60).toFixed(3),\n    flying: (+e.target.value * 60).toFixed(3)\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"time\",\n      children: [\"Enter your Distance:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 41\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: distance.walking,\n        onChange: updateValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 46\n      }, this), \"Distance when Walking\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 42\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: distance.driving,\n        onChange: updateValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 54\n      }, this), \"Distance When Driving\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 42\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: distance.flying,\n        onChange: updateValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 54\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 16\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DistanceToTime, \"SHsWFPyosmDh2rrFtP+4r846T1c=\");\n\n_c = DistanceToTime;\n\nvar _c;\n\n$RefreshReg$(_c, \"DistanceToTime\");","map":{"version":3,"sources":["/home/tcg-pc1/workspace/Distance-to-time-calculator/my-app/src/Components/DistanceToTime.js"],"names":["React","useState","DistanceToTime","distance","setDistance","walking","driving","flying","updateValue","e","value","target","toFixed"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,eAAe,SAASC,cAAT,GAA0B;AAAA;;AACrC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,KAAK,CAACC,QAAN,CAAe;AAAEI,IAAAA,OAAO,EAAE,CAAX;AAAcC,IAAAA,OAAO,EAAE,CAAvB;AAA0BC,IAAAA,MAAM,EAAE;AAAlC,GAAf,CAAhC;;AAEA,QAAMC,WAAW,GAAGC,CAAC,IAAIL,WAAW,CAAE;AAClCM,IAAAA,KAAK,EAAED,CAAC,CAACE,MAAF,CAASD,KADkB;AAElCL,IAAAA,OAAO,EAAE,CAAC,CAACI,CAAC,CAACE,MAAF,CAASD,KAAV,GAAiB,EAAlB,EAAsBE,OAAtB,CAA8B,CAA9B,CAFyB;AAGlCN,IAAAA,OAAO,EAAE,CAAC,CAACG,CAAC,CAACE,MAAF,CAASD,KAAV,GAAiB,EAAlB,EAAsBE,OAAtB,CAA8B,CAA9B,CAHyB;AAIlCL,IAAAA,MAAM,EAAE,CAAC,CAACE,CAAC,CAACE,MAAF,CAASD,KAAV,GAAiB,EAAlB,EAAsBE,OAAtB,CAA8B,CAA9B;AAJ0B,GAAF,CAApC;;AAOA,sBACI;AAAA,2BACO;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA,sDACyB;AAAA;AAAA;AAAA;AAAA,cADzB,eAEK;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAIT,QAAQ,CAACE,OAAvC;AACR,QAAA,QAAQ,EAAIG;AADJ;AAAA;AAAA;AAAA;AAAA,cAFL,eAG8B;AAAA;AAAA;AAAA;AAAA,cAH9B,wCAI0B;AAAA;AAAA;AAAA;AAAA,cAJ1B,eAKK;AAAO,QAAA,IAAI,EAAC,QAAZ;AACA,QAAA,KAAK,EAAIL,QAAQ,CAACG,OADlB;AAEA,QAAA,QAAQ,EAAIE;AAFZ;AAAA;AAAA;AAAA;AAAA,cALL,eAOsC;AAAA;AAAA;AAAA;AAAA,cAPtC,wCAQ0B;AAAA;AAAA;AAAA;AAAA,cAR1B,eASK;AAAO,QAAA,IAAI,EAAC,QAAZ;AACA,QAAA,KAAK,EAAIL,QAAQ,CAACI,MADlB;AAEA,QAAA,QAAQ,EAAIC;AAFZ;AAAA;AAAA;AAAA;AAAA,cATL,eAWsC;AAAA;AAAA;AAAA;AAAA,cAXtC;AAAA;AAAA;AAAA;AAAA;AAAA;AADP;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH;;GA5BuBN,c;;KAAAA,c","sourcesContent":["import React from 'react';\nimport { useState } from 'react'\n\nexport default function DistanceToTime() {\n    const [distance, setDistance] = React.useState({ walking: 0, driving: 0, flying: 0});\n    \n    const updateValue = e => setDistance ({\n        value: e.target.value,\n        walking: (+e.target.value *60).toFixed(3),\n        driving: (+e.target.value *60).toFixed(3),\n        flying: (+e.target.value *60).toFixed(3)\n    })\n\n    return (\n        <div>\n               <form className=\"time\">\n                    Enter your Distance:<br/>\n                    <input type=\"number\" value = {distance.walking} \n            onChange = {updateValue}></input><br/>\n                    Distance when Walking<br/>\n                    <input type=\"number\" \n                    value = {distance.driving} \n                    onChange = {updateValue}></input><br/>\n                    Distance When Driving<br/>\n                    <input type=\"number\" \n                    value = {distance.flying} \n                    onChange = {updateValue}></input><br/>\n                \n                </form>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}