{"ast":null,"code":"import _slicedToArray from\"/home/tcg-pc1/workspace/Distance-to-time-calculator/my-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from'react';import{useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function DistanceToTime(){var _React$useState=React.useState({walking:0,driving:0,flying:0}),_React$useState2=_slicedToArray(_React$useState,2),distance=_React$useState2[0],setDistance=_React$useState2[1];var averageSpeedWhenWalking=3.6;var averageSpeedWhenDriving=50;var averageSpeedWhenFlying=800;var updateWalkingValue=function updateWalkingValue(e){return setDistance({value:e.target.value,walking:(+e.target.value*60/averageSpeedWhenWalking).toFixed(1),driving:(+e.target.value*60/averageSpeedWhenDriving).toFixed(0),flying:(+e.target.value*60/averageSpeedWhenFlying).toFixed(1)});};var updateDrivingValue=function updateDrivingValue(e){return setDistance({value:e.target.value,driving:(+e.target.value*60/averageSpeedWhenDriving).toFixed(2)});};var updateFlyingValue=function updateFlyingValue(e){return setDistance({value:e.target.value,flying:(+e.target.value*60/averageSpeedWhenFlying).toFixed(1)});};return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"form\",{className:\"container\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Enter The Distance\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:distance.value,onChange:updateWalkingValue})]}),\"Distance When Walking:\",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:distance.walking,onChange:updateWalkingValue}),/*#__PURE__*/_jsx(\"br\",{}),\"Distance when Driving\",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:distance.driving,onChange:updateDrivingValue}),/*#__PURE__*/_jsx(\"br\",{}),\"Distance When Flight\",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:distance.flying,onChange:updateFlyingValue}),/*#__PURE__*/_jsx(\"br\",{})]})});}","map":{"version":3,"sources":["/home/tcg-pc1/workspace/Distance-to-time-calculator/my-app/src/Components/DistanceToTime.js"],"names":["React","useState","DistanceToTime","walking","driving","flying","distance","setDistance","averageSpeedWhenWalking","averageSpeedWhenDriving","averageSpeedWhenFlying","updateWalkingValue","e","value","target","toFixed","updateDrivingValue","updateFlyingValue"],"mappings":"gJAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,QAAT,KAAyB,OAAzB,C,wFAEA,cAAe,SAASC,CAAAA,cAAT,EAA0B,CACrC,oBAAgCF,KAAK,CAACC,QAAN,CAAe,CAAEE,OAAO,CAAE,CAAX,CAAcC,OAAO,CAAE,CAAvB,CAA0BC,MAAM,CAAE,CAAlC,CAAf,CAAhC,oDAAOC,QAAP,qBAAiBC,WAAjB,qBAEA,GAAIC,CAAAA,uBAAuB,CAAG,GAA9B,CACA,GAAIC,CAAAA,uBAAuB,CAAG,EAA9B,CACA,GAAIC,CAAAA,sBAAsB,CAAG,GAA7B,CAEA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAAC,CAAC,QAAIL,CAAAA,WAAW,CAAE,CACzCM,KAAK,CAAED,CAAC,CAACE,MAAF,CAASD,KADyB,CAEzCV,OAAO,CAAE,CAAE,CAACS,CAAC,CAACE,MAAF,CAASD,KAAV,CAAiB,EAAlB,CAAsBL,uBAAvB,EAAgDO,OAAhD,CAAwD,CAAxD,CAFgC,CAGzCX,OAAO,CAAE,CAAE,CAACQ,CAAC,CAACE,MAAF,CAASD,KAAV,CAAiB,EAAlB,CAAsBJ,uBAAvB,EAAgDM,OAAhD,CAAwD,CAAxD,CAHgC,CAIzCV,MAAM,CAAE,CAAE,CAACO,CAAC,CAACE,MAAF,CAASD,KAAV,CAAiB,EAAlB,CAAsBH,sBAAvB,EAAgDK,OAAhD,CAAwD,CAAxD,CAJiC,CAAF,CAAf,EAA5B,CAMA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAAJ,CAAC,QAAIL,CAAAA,WAAW,CAAE,CACzCM,KAAK,CAAED,CAAC,CAACE,MAAF,CAASD,KADyB,CAEzCT,OAAO,CAAE,CAAE,CAACQ,CAAC,CAACE,MAAF,CAASD,KAAV,CAAiB,EAAlB,CAAsBJ,uBAAvB,EAAgDM,OAAhD,CAAwD,CAAxD,CAFgC,CAAF,CAAf,EAA5B,CAMA,GAAME,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAAAL,CAAC,QAAIL,CAAAA,WAAW,CAAE,CACxCM,KAAK,CAAED,CAAC,CAACE,MAAF,CAASD,KADwB,CAExCR,MAAM,CAAE,CAAE,CAACO,CAAC,CAACE,MAAF,CAASD,KAAV,CAAiB,EAAlB,CAAsBH,sBAAvB,EAAgDK,OAAhD,CAAwD,CAAxD,CAFgC,CAAF,CAAf,EAA3B,CASA,mBACI,kCACO,cAAM,SAAS,CAAC,WAAhB,wBACA,oCACP,0CADO,cAEP,cACI,IAAI,CAAG,QADX,CAEI,KAAK,CAAIT,QAAQ,CAACO,KAFtB,CAGI,QAAQ,CAAIF,kBAHhB,EAFO,GADA,uCAU2B,aAV3B,cAWK,cAAO,IAAI,CAAC,QAAZ,CACA,KAAK,CAAIL,QAAQ,CAACH,OADlB,CAEA,QAAQ,CAAIQ,kBAFZ,EAXL,cAa6C,aAb7C,sCAc0B,aAd1B,cAeK,cAAO,IAAI,CAAC,QAAZ,CACA,KAAK,CAAIL,QAAQ,CAACF,OADlB,CAEA,QAAQ,CAAIY,kBAFZ,EAfL,cAiB6C,aAjB7C,qCAkByB,aAlBzB,cAmBK,cAAO,IAAI,CAAC,QAAZ,CACA,KAAK,CAAIV,QAAQ,CAACD,MADlB,CAEA,QAAQ,CAAIY,iBAFZ,EAnBL,cAqB4C,aArB5C,GADP,EADJ,CA4BH","sourcesContent":["import React from 'react';\nimport { useState } from 'react'\n\nexport default function DistanceToTime() {\n    const [distance, setDistance] = React.useState({ walking: 0, driving: 0, flying: 0});\n   \n    var averageSpeedWhenWalking = 3.6;\n    var averageSpeedWhenDriving = 50;\n    var averageSpeedWhenFlying = 800;\n\n    const updateWalkingValue = e => setDistance ({\n        value: e.target.value,\n        walking: ((+e.target.value *60)/averageSpeedWhenWalking).toFixed(1),\n        driving: ((+e.target.value *60)/averageSpeedWhenDriving).toFixed(0),\n        flying: ((+e.target.value *60)/averageSpeedWhenFlying ).toFixed(1)\n    })\n    const updateDrivingValue = e => setDistance ({\n        value: e.target.value,\n        driving: ((+e.target.value *60)/averageSpeedWhenDriving).toFixed(2),\n        \n    })\n\n    const updateFlyingValue = e => setDistance ({\n        value: e.target.value,\n        flying: ((+e.target.value *60)/averageSpeedWhenFlying ).toFixed(1)\n\n        \n    })\n\n   \n\n    return (\n        <div>\n               <form className=\"container\">\n               <div>\n        <h1>Enter The Distance</h1>\n        <input\n            type = \"number\"\n            value = {distance.value}\n            onChange = {updateWalkingValue} >\n          </input>\n          </div>\n      \n                    Distance When Walking:<br/>\n                    <input type=\"number\" \n                    value = {distance.walking} \n                    onChange = {updateWalkingValue}></input><br/>\n                    Distance when Driving<br/>\n                    <input type=\"number\" \n                    value = {distance.driving} \n                    onChange = {updateDrivingValue}></input><br/>\n                    Distance When Flight<br/>\n                    <input type=\"number\" \n                    value = {distance.flying} \n                    onChange = {updateFlyingValue}></input><br/>\n                \n                </form>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}